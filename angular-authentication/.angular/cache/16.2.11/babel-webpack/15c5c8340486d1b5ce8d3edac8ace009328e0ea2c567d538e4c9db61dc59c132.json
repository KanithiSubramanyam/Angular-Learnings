{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { inject } from \"@angular/core\";\nimport { catchError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.http = inject(HttpClient);\n    this.error = '';\n  }\n  signUp(email, password) {\n    const data = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    return this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBwVQlYXpYf2AAZ50bsunrXT_LVFONfdMs', data).pipe(catchError(error => {\n      if (!error.error || !error.error.error) {\n        this.error = 'An unknown error occurred';\n      } else {\n        this.error = error.error.error.message;\n      }\n    }));\n  }\n  login(email, password) {}\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpClient","inject","catchError","AuthService","constructor","http","error","signUp","email","password","data","returnSecureToken","post","pipe","message","login","_","_2","factory","ɵfac","providedIn"],"sources":["E:\\sails\\Angular\\angular-authentication\\src\\app\\Services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { AuthResponse } from \"../Model/AuthReponse\";\r\nimport { catchError, throwError } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthService   {\r\n\r\n    http : HttpClient = inject(HttpClient);\r\n    error : string = '';\r\n    signUp(email, password ){\r\n        const data = {\r\n            email : email,\r\n            password : password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n       return this.http.post<AuthResponse>('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBwVQlYXpYf2AAZ50bsunrXT_LVFONfdMs', data)\r\n       .pipe(\r\n            catchError(error => {\r\n                if(!error.error || !error.error.error){\r\n                    this.error = 'An unknown error occurred';\r\n                }\r\n                else{\r\n                    this.error = error.error.error.message;\r\n                }\r\n                \r\n        );\r\n    }\r\n    login(email, password){\r\n    }\r\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,MAAM,QAAoB,eAAe;AAElD,SAASC,UAAU,QAAoB,MAAM;;AAK7C,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAKI,KAAAC,IAAI,GAAgBJ,MAAM,CAACD,UAAU,CAAC;IACtC,KAAAM,KAAK,GAAY,EAAE;;EACnBC,MAAMA,CAACC,KAAK,EAAEC,QAAQ;IAClB,MAAMC,IAAI,GAAG;MACTF,KAAK,EAAGA,KAAK;MACbC,QAAQ,EAAGA,QAAQ;MACnBE,iBAAiB,EAAE;KACtB;IAEF,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAe,uGAAuG,EAAEF,IAAI,CAAC,CACjJG,IAAI,CACAX,UAAU,CAACI,KAAK,IAAG;MACf,IAAG,CAACA,KAAK,CAACA,KAAK,IAAI,CAACA,KAAK,CAACA,KAAK,CAACA,KAAK,EAAC;QAClC,IAAI,CAACA,KAAK,GAAG,2BAA2B;OAC3C,MACG;QACA,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACA,KAAK,CAACA,KAAK,CAACQ,OAAO;;IAGlD,CAAC;EACL;EACAC,KAAKA,CAACP,KAAK,EAAEC,QAAQ,GACrB;EAAC,QAAAO,CAAA,G;qBAxBQb,WAAW;EAAA;EAAA,QAAAc,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}