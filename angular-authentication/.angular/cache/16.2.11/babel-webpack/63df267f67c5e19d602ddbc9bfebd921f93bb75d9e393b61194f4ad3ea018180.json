{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../Services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../utility/loader/loader.component\";\nfunction LoginComponent_app_loader_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loader\");\n  }\n}\nexport class LoginComponent {\n  constructor() {\n    this.isLoginMode = true;\n    this.authService = inject(AuthService);\n    this.loginCredentials = '';\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n    });\n  }\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n  onLoginSubmit(data) {\n    const email = data.value.email;\n    const password = data.value.password;\n    console.log(email, password);\n    if (this.isLoginMode) {\n      //loginLogic\n      return this.authService.login(email, password);\n    } else {\n      this.isLoading = true;\n      //signupLogic\n      this.authService.signUp(email, password).subscribe({\n        next: response => {\n          console.log(response);\n          this.isLoading = false;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n    data.reset();\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 7,\n    consts: [[1, \"app-login-form\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-input\"], [\"type\", \"email\", \"placeholder\", \"Email address\", \"formControlName\", \"email\", \"name\", \"email\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", \"name\", \"password\"], [\"type\", \"submit\", 1, \"app-login-btn\", 3, \"disabled\"], [\"type\", \"button\", 1, \"app-toggle-btn\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, LoginComponent_app_loader_3_Template, 1, 0, \"app-loader\", 1);\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onLoginSubmit(ctx.loginForm);\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n        i0.ɵɵtext(7, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\");\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 6);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16);\n        i0.ɵɵelementStart(17, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n          return ctx.onSwitchMode();\n        });\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login Here\" : \"Sign up Here\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isLoginMode ? \"Login\" : \"Sign up\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", !ctx.isLoginMode ? \"Already having an account? \" : \"Do not have an accout yet? \", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(!ctx.isLoginMode ? \"Login\" : \"Register\");\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.LoaderComponent],\n    styles: [\".app-login-form[_ngcontent-%COMP%]{\\n    width: 520px;\\n    height: 360px;\\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\\n    padding: 30px 30px;\\n    border-radius: 10px;\\n    margin: 75px auto;\\n}\\n.form-input[_ngcontent-%COMP%]{\\n    margin-top: 10px;\\n}\\n.form-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n    width: 100%;   \\n    height: 40px; \\n    border: #eee 2px solid;\\n    padding: 0px 20px;\\n}\\n.app-login-btn[_ngcontent-%COMP%]{\\n    width: 100%;\\n    border: none;\\n    padding: 15px;\\n    margin: 15px 0px;\\n    background-color: #28282B;\\n    color: white;\\n}\\n.app-toggle-btn[_ngcontent-%COMP%]{\\n    border: none;\\n    font-size: 16px;\\n    background-color: transparent;\\n    color: #0e0ede;\\n    cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsNENBQTRDO0lBQzVDLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osZUFBZTtJQUNmLDZCQUE2QjtJQUM3QixjQUFjO0lBQ2QsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtbG9naW4tZm9ybXtcclxuICAgIHdpZHRoOiA1MjBweDtcclxuICAgIGhlaWdodDogMzYwcHg7XHJcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMzUpIDBweCA1cHggMTVweDtcclxuICAgIHBhZGRpbmc6IDMwcHggMzBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBtYXJnaW46IDc1cHggYXV0bztcclxufVxyXG4uZm9ybS1pbnB1dHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuLmZvcm0taW5wdXQgaW5wdXR7XHJcbiAgICB3aWR0aDogMTAwJTsgICBcclxuICAgIGhlaWdodDogNDBweDsgXHJcbiAgICBib3JkZXI6ICNlZWUgMnB4IHNvbGlkO1xyXG4gICAgcGFkZGluZzogMHB4IDIwcHg7XHJcbn1cclxuLmFwcC1sb2dpbi1idG57XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBtYXJnaW46IDE1cHggMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI4MjgyQjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG4uYXBwLXRvZ2dsZS1idG57XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGNvbG9yOiAjMGUwZWRlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["inject","FormControl","FormGroup","Validators","AuthService","i0","ɵɵelement","LoginComponent","constructor","isLoginMode","authService","loginCredentials","isLoading","ngOnInit","loginForm","email","required","password","minLength","onSwitchMode","onLoginSubmit","data","value","console","log","login","signUp","subscribe","next","response","error","reset","_","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_app_loader_3_Template","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_button_click_17_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","invalid","ɵɵtextInterpolate1"],"sources":["E:\\sails\\Angular\\angular-authentication\\src\\app\\login\\login.component.ts","E:\\sails\\Angular\\angular-authentication\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../Services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n  isLoginMode : boolean = true;\r\n  authService : AuthService = inject(AuthService);\r\n\r\n  loginCredentials : string = '';\r\n  loginForm : FormGroup; \r\n  isLoading : boolean = false;\r\n\r\n  ngOnInit() {\r\n    this.loginForm = new FormGroup({\r\n      email : new FormControl(null, [Validators.required, Validators.email]),\r\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)]),\r\n    });\r\n  }\r\n\r\n  onSwitchMode(){\r\n    this.isLoginMode = !this.isLoginMode;\r\n  }\r\n\r\n  onLoginSubmit(data : FormGroup){\r\n    const email = data.value.email;\r\n    const password = data.value.password;\r\n    console.log(email, password);\r\n\r\n    if(this.isLoginMode){\r\n\r\n      //loginLogic\r\n      return this.authService.login(email, password);\r\n    }\r\n    else{\r\n      this.isLoading = true;\r\n      //signupLogic\r\n      this.authService.signUp(email, password).subscribe({\r\n        next : (response) => {\r\n          console.log(response);\r\n          this.isLoading = false;\r\n        },\r\n        error : (error) => {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n    }\r\n    data.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"app-login-form\">\r\n    <h2 >{{ isLoginMode? 'Login Here' : 'Sign up Here' }}</h2>\r\n    <app-loader  *ngIf=\"isLoading\" ></app-loader>\r\n    <form (ngSubmit)=\"onLoginSubmit(loginForm)\" [formGroup]=\"loginForm\">\r\n        <div class=\"form-input\">\r\n            <label>Email Address</label>\r\n            <input type=\"email\" placeholder=\"Email address\" formControlName=\"email\" name=\"email\">\r\n        </div>\r\n        <div class=\"form-input\">\r\n            <label>Password</label>\r\n            <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" name=\"password\">\r\n        </div>           \r\n        <button type=\"submit\" class=\"app-login-btn\" [disabled] = \"loginForm.invalid\">{{ isLoginMode? 'Login' : 'Sign up' }} </button>\r\n        <p>{{ !isLoginMode? 'Already having an account? ':'Do not have an accout yet? ' }} \r\n            <button class=\"app-toggle-btn\" type=\"button\" (click)=\"onSwitchMode()\">{{ !isLoginMode? 'Login' : 'Register' }}</button>\r\n        </p>\r\n    </form>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}