{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor() {\n    this.isLoginMode = true;\n    this.loginCredentials = '';\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength()])\n    });\n  }\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n  onLoginSubmit(data) {\n    console.log(data.value);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 18,\n    vars: 5,\n    consts: [[1, \"app-login-form\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-input\"], [\"type\", \"email\", \"placeholder\", \"Email address\", \"formControlName\", \"email\", \"name\", \"email\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", \"name\", \"password\"], [\"type\", \"submit\", 1, \"app-login-btn\"], [\"type\", \"button\", 1, \"app-toggle-btn\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onLoginSubmit(ctx.loginForm);\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n        i0.ɵɵtext(6, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n        i0.ɵɵtext(10, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 5);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\");\n        i0.ɵɵtext(15);\n        i0.ɵɵelementStart(16, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_16_listener() {\n          return ctx.onSwitchMode();\n        });\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login Here\" : \"Sign up Here\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login\" : \"Sign up\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", !ctx.isLoginMode ? \"Already having an account? \" : \"Do not have an accout yet? \", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(!ctx.isLoginMode ? \"Login\" : \"Register\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".app-login-form[_ngcontent-%COMP%]{\\n    width: 520px;\\n    height: 360px;\\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\\n    padding: 30px 30px;\\n    border-radius: 10px;\\n    margin: 75px auto;\\n}\\n.form-input[_ngcontent-%COMP%]{\\n    margin-top: 10px;\\n}\\n.form-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n    width: 100%;   \\n    height: 40px; \\n    border: #eee 2px solid;\\n    padding: 0px 20px;\\n}\\n.app-login-btn[_ngcontent-%COMP%]{\\n    width: 100%;\\n    border: none;\\n    padding: 15px;\\n    margin: 15px 0px;\\n    background-color: #28282B;\\n    color: white;\\n}\\n.app-toggle-btn[_ngcontent-%COMP%]{\\n    border: none;\\n    font-size: 16px;\\n    background-color: transparent;\\n    color: #0e0ede;\\n    cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsNENBQTRDO0lBQzVDLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osZUFBZTtJQUNmLDZCQUE2QjtJQUM3QixjQUFjO0lBQ2QsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtbG9naW4tZm9ybXtcclxuICAgIHdpZHRoOiA1MjBweDtcclxuICAgIGhlaWdodDogMzYwcHg7XHJcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMzUpIDBweCA1cHggMTVweDtcclxuICAgIHBhZGRpbmc6IDMwcHggMzBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBtYXJnaW46IDc1cHggYXV0bztcclxufVxyXG4uZm9ybS1pbnB1dHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuLmZvcm0taW5wdXQgaW5wdXR7XHJcbiAgICB3aWR0aDogMTAwJTsgICBcclxuICAgIGhlaWdodDogNDBweDsgXHJcbiAgICBib3JkZXI6ICNlZWUgMnB4IHNvbGlkO1xyXG4gICAgcGFkZGluZzogMHB4IDIwcHg7XHJcbn1cclxuLmFwcC1sb2dpbi1idG57XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBtYXJnaW46IDE1cHggMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI4MjgyQjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG4uYXBwLXRvZ2dsZS1idG57XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGNvbG9yOiAjMGUwZWRlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","LoginComponent","constructor","isLoginMode","loginCredentials","loginForm","email","required","password","minLength","onSwitchMode","onLoginSubmit","data","console","log","value","_","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","LoginComponent_Template_button_click_16_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["E:\\sails\\Angular\\angular-authentication\\src\\app\\login\\login.component.ts","E:\\sails\\Angular\\angular-authentication\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n  isLoginMode : boolean = true;\r\n\r\n  loginCredentials : string = '';\r\n\r\n  loginForm : FormGroup = new FormGroup({\r\n    email : new FormControl(null, [Validators.required, Validators.email]),\r\n    password : new FormControl(null, [Validators.required, Validators.minLength()]),\r\n  });\r\n\r\n  onSwitchMode(){\r\n    this.isLoginMode = !this.isLoginMode;\r\n  }\r\n  onLoginSubmit(data : FormGroup){\r\n    console.log(data.value);\r\n  }\r\n\r\n}\r\n","<div class=\"app-login-form\">\r\n    <h2 >{{ isLoginMode? 'Login Here' : 'Sign up Here' }}</h2>\r\n    <form (ngSubmit)=\"onLoginSubmit(loginForm)\" [formGroup]=\"loginForm\">\r\n        <div class=\"form-input\">\r\n            <label>Email Address</label>\r\n            <input type=\"email\" placeholder=\"Email address\" formControlName=\"email\" name=\"email\">\r\n        </div>\r\n        <div class=\"form-input\">\r\n            <label>Password</label>\r\n            <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" name=\"password\">\r\n        </div>           \r\n        <button type=\"submit\" class=\"app-login-btn\">{{ isLoginMode? 'Login' : 'Sign up' }}</button>\r\n        <p>{{ !isLoginMode? 'Already having an account? ':'Do not have an accout yet? ' }} \r\n            <button class=\"app-toggle-btn\" type=\"button\" (click)=\"onSwitchMode()\">{{ !isLoginMode? 'Login' : 'Register' }}</button>\r\n        </p>\r\n    </form>\r\n</div>\r\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAOnE,OAAM,MAAOC,cAAc;EAL3BC,YAAA;IAOE,KAAAC,WAAW,GAAa,IAAI;IAE5B,KAAAC,gBAAgB,GAAY,EAAE;IAE9B,KAAAC,SAAS,GAAe,IAAIN,SAAS,CAAC;MACpCO,KAAK,EAAG,IAAIR,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACM,KAAK,CAAC,CAAC;MACtEE,QAAQ,EAAG,IAAIV,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACS,SAAS,EAAE,CAAC;KAC/E,CAAC;;EAEFC,YAAYA,CAAA;IACV,IAAI,CAACP,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;EACAQ,aAAaA,CAACC,IAAgB;IAC5BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,KAAK,CAAC;EACzB;EAAC,QAAAC,CAAA,G;qBAhBUf,cAAc;EAAA;EAAA,QAAAgB,EAAA,G;UAAdhB,cAAc;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR3BE,EAAA,CAAAC,cAAA,aAA4B;QACnBD,EAAA,CAAAE,MAAA,GAAgD;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC1DH,EAAA,CAAAC,cAAA,cAAoE;QAA9DD,EAAA,CAAAI,UAAA,sBAAAC,iDAAA;UAAA,OAAYN,GAAA,CAAAd,aAAA,CAAAc,GAAA,CAAApB,SAAA,CAAwB;QAAA,EAAC;QACvCqB,EAAA,CAAAC,cAAA,aAAwB;QACbD,EAAA,CAAAE,MAAA,oBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC5BH,EAAA,CAAAM,SAAA,eAAqF;QACzFN,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAAwB;QACbD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvBH,EAAA,CAAAM,SAAA,gBAAyF;QAC7FN,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,iBAA4C;QAAAD,EAAA,CAAAE,MAAA,IAAsC;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC3FH,EAAA,CAAAC,cAAA,SAAG;QAAAD,EAAA,CAAAE,MAAA,IACC;QAAAF,EAAA,CAAAC,cAAA,iBAAsE;QAAzBD,EAAA,CAAAI,UAAA,mBAAAG,iDAAA;UAAA,OAASR,GAAA,CAAAf,YAAA,EAAc;QAAA,EAAC;QAACgB,EAAA,CAAAE,MAAA,IAAwC;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAZ1HH,EAAA,CAAAQ,SAAA,GAAgD;QAAhDR,EAAA,CAAAS,iBAAA,CAAAV,GAAA,CAAAtB,WAAA,iCAAgD;QACTuB,EAAA,CAAAQ,SAAA,GAAuB;QAAvBR,EAAA,CAAAU,UAAA,cAAAX,GAAA,CAAApB,SAAA,CAAuB;QASnBqB,EAAA,CAAAQ,SAAA,IAAsC;QAAtCR,EAAA,CAAAS,iBAAA,CAAAV,GAAA,CAAAtB,WAAA,uBAAsC;QAC/EuB,EAAA,CAAAQ,SAAA,GACC;QADDR,EAAA,CAAAW,kBAAA,MAAAZ,GAAA,CAAAtB,WAAA,sEACC;QAAsEuB,EAAA,CAAAQ,SAAA,GAAwC;QAAxCR,EAAA,CAAAS,iBAAA,EAAAV,GAAA,CAAAtB,WAAA,wBAAwC"},"metadata":{},"sourceType":"module","externalDependencies":[]}