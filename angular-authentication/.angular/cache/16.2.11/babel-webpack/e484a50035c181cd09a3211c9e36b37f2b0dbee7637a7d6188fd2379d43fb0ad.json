{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../Services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../utility/loader/loader.component\";\nfunction LoginComponent_app_loader_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loader\");\n  }\n}\nfunction LoginComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onLoginSubmit(ctx_r2.loginForm));\n    });\n    i0.ɵɵelementStart(1, \"div\", 4)(2, \"label\");\n    i0.ɵɵtext(3, \"Email Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\");\n    i0.ɵɵtext(7, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 7);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementStart(13, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_4_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSwitchMode());\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.loginForm);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.loginForm.invalid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.isLoginMode ? \"Login\" : \"Sign up\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", !ctx_r1.isLoginMode ? \"Already having an account? \" : \"Do not have an accout yet? \", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(!ctx_r1.isLoginMode ? \"Login\" : \"Register\");\n  }\n}\nexport class LoginComponent {\n  constructor() {\n    this.isLoginMode = true;\n    this.authService = inject(AuthService);\n    this.loginCredentials = '';\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n    });\n  }\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n  onLoginSubmit(data) {\n    const email = data.value.email;\n    const password = data.value.password;\n    console.log(email, password);\n    if (this.isLoginMode) {\n      //loginLogic\n      return this.authService.login(email, password);\n    } else {\n      this.isLoading = true;\n      //signupLogic\n      this.authService.signUp(email, password).subscribe({\n        next: response => {\n          console.log(response);\n          this.isLoading = false;\n        },\n        error: error => {\n          console.log(error);\n          this.isLoading = false;\n        }\n      });\n    }\n    data.reset();\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"app-login-form\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-input\"], [\"type\", \"email\", \"placeholder\", \"Email address\", \"formControlName\", \"email\", \"name\", \"email\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", \"name\", \"password\"], [\"type\", \"submit\", 1, \"app-login-btn\", 3, \"disabled\"], [\"type\", \"button\", 1, \"app-toggle-btn\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, LoginComponent_app_loader_3_Template, 1, 0, \"app-loader\", 1);\n        i0.ɵɵtemplate(4, LoginComponent_form_4_Template, 15, 5, \"form\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login Here\" : \"Sign up Here\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.LoaderComponent],\n    styles: [\".app-login-form[_ngcontent-%COMP%]{\\n    width: 520px;\\n    height: 360px;\\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\\n    padding: 30px 30px;\\n    border-radius: 10px;\\n    margin: 75px auto;\\n}\\n.form-input[_ngcontent-%COMP%]{\\n    margin-top: 10px;\\n}\\n.form-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n    width: 100%;   \\n    height: 40px; \\n    border: #eee 2px solid;\\n    padding: 0px 20px;\\n}\\n.app-login-btn[_ngcontent-%COMP%]{\\n    width: 100%;\\n    border: none;\\n    padding: 15px;\\n    margin: 15px 0px;\\n    background-color: #28282B;\\n    color: white;\\n}\\n.app-toggle-btn[_ngcontent-%COMP%]{\\n    border: none;\\n    font-size: 16px;\\n    background-color: transparent;\\n    color: #0e0ede;\\n    cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsNENBQTRDO0lBQzVDLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osZUFBZTtJQUNmLDZCQUE2QjtJQUM3QixjQUFjO0lBQ2QsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtbG9naW4tZm9ybXtcclxuICAgIHdpZHRoOiA1MjBweDtcclxuICAgIGhlaWdodDogMzYwcHg7XHJcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMzUpIDBweCA1cHggMTVweDtcclxuICAgIHBhZGRpbmc6IDMwcHggMzBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBtYXJnaW46IDc1cHggYXV0bztcclxufVxyXG4uZm9ybS1pbnB1dHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuLmZvcm0taW5wdXQgaW5wdXR7XHJcbiAgICB3aWR0aDogMTAwJTsgICBcclxuICAgIGhlaWdodDogNDBweDsgXHJcbiAgICBib3JkZXI6ICNlZWUgMnB4IHNvbGlkO1xyXG4gICAgcGFkZGluZzogMHB4IDIwcHg7XHJcbn1cclxuLmFwcC1sb2dpbi1idG57XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBtYXJnaW46IDE1cHggMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI4MjgyQjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG4uYXBwLXRvZ2dsZS1idG57XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGNvbG9yOiAjMGUwZWRlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["inject","FormControl","FormGroup","Validators","AuthService","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","LoginComponent_form_4_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onLoginSubmit","loginForm","ɵɵtext","ɵɵelementEnd","LoginComponent_form_4_Template_button_click_13_listener","ctx_r4","onSwitchMode","ɵɵproperty","ctx_r1","ɵɵadvance","invalid","ɵɵtextInterpolate1","isLoginMode","ɵɵtextInterpolate","LoginComponent","constructor","authService","loginCredentials","isLoading","ngOnInit","email","required","password","minLength","data","value","console","log","login","signUp","subscribe","next","response","error","reset","_","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_app_loader_3_Template","LoginComponent_form_4_Template"],"sources":["E:\\sails\\Angular\\angular-authentication\\src\\app\\login\\login.component.ts","E:\\sails\\Angular\\angular-authentication\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../Services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n  isLoginMode : boolean = true;\r\n  authService : AuthService = inject(AuthService);\r\n\r\n  loginCredentials : string = '';\r\n  loginForm : FormGroup; \r\n  isLoading : boolean = false;\r\n\r\n  ngOnInit() {\r\n    this.loginForm = new FormGroup({\r\n      email : new FormControl(null, [Validators.required, Validators.email]),\r\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)]),\r\n    });\r\n  }\r\n\r\n  onSwitchMode(){\r\n    this.isLoginMode = !this.isLoginMode;\r\n  }\r\n\r\n  onLoginSubmit(data : FormGroup){\r\n    const email = data.value.email;\r\n    const password = data.value.password;\r\n    console.log(email, password);\r\n\r\n    if(this.isLoginMode){\r\n\r\n      //loginLogic\r\n      return this.authService.login(email, password);\r\n    }\r\n    else{\r\n      this.isLoading = true;\r\n      //signupLogic\r\n      this.authService.signUp(email, password).subscribe({\r\n        next : (response) => {\r\n          console.log(response);\r\n          this.isLoading = false;\r\n        },\r\n        error : (error) => {\r\n          console.log(error);\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n\r\n    }\r\n    data.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"app-login-form\">\r\n    <h2 >{{ isLoginMode? 'Login Here' : 'Sign up Here' }}</h2>\r\n    <app-loader  *ngIf=\"isLoading\" ></app-loader>\r\n    <form (ngSubmit)=\"onLoginSubmit(loginForm)\" [formGroup]=\"loginForm\" *ngIf=\"\">\r\n        <div class=\"form-input\">\r\n            <label>Email Address</label>\r\n            <input type=\"email\" placeholder=\"Email address\" formControlName=\"email\" name=\"email\">\r\n        </div>\r\n        <div class=\"form-input\">\r\n            <label>Password</label>\r\n            <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" name=\"password\">\r\n        </div>           \r\n        <button type=\"submit\" class=\"app-login-btn\" [disabled] = \"loginForm.invalid\">{{ isLoginMode? 'Login' : 'Sign up' }} </button>\r\n        <p>{{ !isLoginMode? 'Already having an account? ':'Do not have an accout yet? ' }} \r\n            <button class=\"app-toggle-btn\" type=\"button\" (click)=\"onSwitchMode()\">{{ !isLoginMode? 'Login' : 'Register' }}</button>\r\n        </p>\r\n    </form>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}