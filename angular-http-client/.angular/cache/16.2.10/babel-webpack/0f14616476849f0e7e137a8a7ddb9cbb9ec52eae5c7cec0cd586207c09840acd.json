{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TaskService } from '../services/Task.service';\nexport let DashboardComponent = class DashboardComponent {\n  constructor() {\n    this.showCreateTaskForm = false;\n    this.http = inject(HttpClient);\n    this.allTasks = [];\n    this.taskService = inject(TaskService);\n    this.editMode = false;\n  }\n  ngOnInit() {\n    this.fetchAllTask();\n  }\n  OpenCreateTaskForm() {\n    this.showCreateTaskForm = true;\n    this.editMode = false;\n    this.selectedTask = {\n      title: '',\n      description: '',\n      assignedTo: '',\n      createdAt: '',\n      priority: '',\n      status: '',\n      id: ''\n    };\n  }\n  CloseCreateTaskForm() {\n    this.showCreateTaskForm = false;\n  }\n  createOrUpdateTask(form) {\n    // console.log(\"Task Created\", form);\n    // // this.http.post('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form)\n    // // .subscribe( (response)=>{\n    // //   console.log(response);\n    // // });\n    // const headers = new HttpHeaders({ 'my-header': 'my-header-value' })\n    // this.http.post<{ name: string }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form, { headers: headers })\n    //   .subscribe((response) => {\n    //     console.log(response);\n    //   });\n    //   this.fetchAllTask();\n    if (this.editMode) {\n      this.taskService.updateTask(this.currentTaskId, form);\n    } else {\n      this.taskService.createTask(form);\n    }\n  }\n  fetchAllTask() {\n    // // this.http.get('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\n    // // .subscribe( (response) =>{\n    // //   console.log(response);\n    // // })\n    // this.http.get<{ [key: string]: Task }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\n    //   .pipe(map((response) => {\n    //     //transform data\n    //     let tasks = [];\n    //     for (let key in response) {\n    //       if (response.hasOwnProperty(key)) {\n    //         tasks.push({ ...response[key], id: key });\n    //       }\n    //     }\n    //     return tasks;\n    //   }))\n    //   .subscribe((response) => {\n    //     this.allTasks = response;\n    //     // console.log(response);\n    //   })\n    //   this.fetchAllTask();\n    this.taskService.getAllTasks().subscribe(task => {\n      return this.allTasks = task;\n    });\n  }\n  fetchAllTasksToDisplay() {\n    this.fetchAllTask();\n  }\n  deleteTask(key) {\n    this.taskService.deleteTask(key);\n    this.fetchAllTask();\n  }\n  clearAllTasks() {\n    this.taskService.deleteAllTasks();\n    this.fetchAllTask();\n  }\n  onEditClassClick(key) {\n    // this.taskService.editTask(key);\n    this.showCreateTaskForm = true;\n    this.editMode = true;\n    // console.log(key);\n    this.selectedTask = this.allTasks.find(task => {\n      return task.id === key;\n    });\n    this.currentTaskId = key;\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["Component","inject","HttpClient","TaskService","DashboardComponent","constructor","showCreateTaskForm","http","allTasks","taskService","editMode","ngOnInit","fetchAllTask","OpenCreateTaskForm","selectedTask","title","description","assignedTo","createdAt","priority","status","id","CloseCreateTaskForm","createOrUpdateTask","form","updateTask","currentTaskId","createTask","getAllTasks","subscribe","task","fetchAllTasksToDisplay","deleteTask","key","clearAllTasks","deleteAllTasks","onEditClassClick","find","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\sails\\Angular\\angular-http-client\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\r\nimport { Task } from '../model/task';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs';\r\nimport { TaskService } from '../services/Task.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  showCreateTaskForm: boolean = false;\r\n\r\n  http: HttpClient = inject(HttpClient);\r\n\r\n  allTasks: Task[] = [];\r\n\r\n  taskService: TaskService = inject(TaskService);\r\n\r\n  editMode: boolean = false;\r\n\r\n  selectedTask: Task;\r\n  currentTaskId : string;\r\n\r\n  ngOnInit(): void {\r\n    this.fetchAllTask();\r\n  }\r\n  OpenCreateTaskForm() {\r\n    this.showCreateTaskForm = true;\r\n    this.editMode = false;\r\n    this.selectedTask = {\r\n      title: '', description: '', assignedTo: '', createdAt: '', priority: '', status: '', id: ''\r\n    }\r\n  }\r\n\r\n  CloseCreateTaskForm() {\r\n    this.showCreateTaskForm = false;\r\n  }\r\n\r\n  createOrUpdateTask(form: Task) {\r\n    // console.log(\"Task Created\", form);\r\n    // // this.http.post('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form)\r\n    // // .subscribe( (response)=>{\r\n    // //   console.log(response);\r\n    // // });\r\n\r\n    // const headers = new HttpHeaders({ 'my-header': 'my-header-value' })\r\n    // this.http.post<{ name: string }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form, { headers: headers })\r\n    //   .subscribe((response) => {\r\n    //     console.log(response);\r\n    //   });\r\n    //   this.fetchAllTask();\r\n\r\n\r\n    if(this.editMode){\r\n      this.taskService.updateTask(this.currentTaskId, form);\r\n    }else{\r\n      this.taskService.createTask(form);\r\n    }\r\n  }\r\n\r\n  private fetchAllTask() {\r\n    // // this.http.get('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\r\n    // // .subscribe( (response) =>{\r\n    // //   console.log(response);\r\n    // // })\r\n\r\n    // this.http.get<{ [key: string]: Task }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\r\n    //   .pipe(map((response) => {\r\n    //     //transform data\r\n    //     let tasks = [];\r\n\r\n    //     for (let key in response) {\r\n    //       if (response.hasOwnProperty(key)) {\r\n    //         tasks.push({ ...response[key], id: key });\r\n    //       }\r\n    //     }\r\n    //     return tasks;\r\n    //   }))\r\n    //   .subscribe((response) => {\r\n    //     this.allTasks = response;\r\n    //     // console.log(response);\r\n    //   })\r\n    //   this.fetchAllTask();\r\n\r\n    this.taskService.getAllTasks().subscribe((task: Task[]) => {\r\n      return this.allTasks = task; \r\n    })\r\n\r\n  }\r\n  fetchAllTasksToDisplay() {\r\n    this.fetchAllTask();\r\n  }\r\n\r\n  deleteTask(key: string) {\r\n    this.taskService.deleteTask(key);\r\n    this.fetchAllTask();\r\n  }\r\n  clearAllTasks() {\r\n    this.taskService.deleteAllTasks();\r\n    this.fetchAllTask();\r\n  }\r\n\r\n  onEditClassClick(key: string) {\r\n    // this.taskService.editTask(key);\r\n    this.showCreateTaskForm = true;\r\n    this.editMode = true;\r\n    // console.log(key);\r\n\r\n    this.selectedTask = this.allTasks.find((task) => {\r\n      return task.id === key;\r\n    })\r\n\r\n    this.currentTaskId = key;\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,MAAM,QAAQ,eAAe;AAEzD,SAASC,UAAU,QAAqB,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,0BAA0B;AAO/C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAAxBC,YAAA;IACL,KAAAC,kBAAkB,GAAY,KAAK;IAEnC,KAAAC,IAAI,GAAeN,MAAM,CAACC,UAAU,CAAC;IAErC,KAAAM,QAAQ,GAAW,EAAE;IAErB,KAAAC,WAAW,GAAgBR,MAAM,CAACE,WAAW,CAAC;IAE9C,KAAAO,QAAQ,GAAY,KAAK;EAgG3B;EA3FEC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EACAC,kBAAkBA,CAAA;IAChB,IAAI,CAACP,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACI,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACI,YAAY,GAAG;MAClBC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,UAAU,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,EAAE,EAAE;KAC1F;EACH;EAEAC,mBAAmBA,CAAA;IACjB,IAAI,CAAChB,kBAAkB,GAAG,KAAK;EACjC;EAEAiB,kBAAkBA,CAACC,IAAU;IAC3B;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAGA,IAAG,IAAI,CAACd,QAAQ,EAAC;MACf,IAAI,CAACD,WAAW,CAACgB,UAAU,CAAC,IAAI,CAACC,aAAa,EAAEF,IAAI,CAAC;KACtD,MAAI;MACH,IAAI,CAACf,WAAW,CAACkB,UAAU,CAACH,IAAI,CAAC;;EAErC;EAEQZ,YAAYA,CAAA;IAClB;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,CAACH,WAAW,CAACmB,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAY,IAAI;MACxD,OAAO,IAAI,CAACtB,QAAQ,GAAGsB,IAAI;IAC7B,CAAC,CAAC;EAEJ;EACAC,sBAAsBA,CAAA;IACpB,IAAI,CAACnB,YAAY,EAAE;EACrB;EAEAoB,UAAUA,CAACC,GAAW;IACpB,IAAI,CAACxB,WAAW,CAACuB,UAAU,CAACC,GAAG,CAAC;IAChC,IAAI,CAACrB,YAAY,EAAE;EACrB;EACAsB,aAAaA,CAAA;IACX,IAAI,CAACzB,WAAW,CAAC0B,cAAc,EAAE;IACjC,IAAI,CAACvB,YAAY,EAAE;EACrB;EAEAwB,gBAAgBA,CAACH,GAAW;IAC1B;IACA,IAAI,CAAC3B,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACI,QAAQ,GAAG,IAAI;IACpB;IAEA,IAAI,CAACI,YAAY,GAAG,IAAI,CAACN,QAAQ,CAAC6B,IAAI,CAAEP,IAAI,IAAI;MAC9C,OAAOA,IAAI,CAACT,EAAE,KAAKY,GAAG;IACxB,CAAC,CAAC;IAEF,IAAI,CAACP,aAAa,GAAGO,GAAG;EAC1B;CACD;AAzGY7B,kBAAkB,GAAAkC,UAAA,EAL9BtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWrC,kBAAkB,CAyG9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}