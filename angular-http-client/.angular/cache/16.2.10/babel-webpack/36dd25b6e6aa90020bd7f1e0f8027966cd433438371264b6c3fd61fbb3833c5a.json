{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TaskService } from '../services/Task.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./create-task/create-task.component\";\nfunction DashboardComponent_app_create_task_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-create-task\", 11);\n    i0.ɵɵlistener(\"CloseForm\", function DashboardComponent_app_create_task_0_Template_app_create_task_CloseForm_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.CloseCreateTaskForm());\n    })(\"EmitTaskData\", function DashboardComponent_app_create_task_0_Template_app_create_task_EmitTaskData_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.createOrUpdateTask($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"isEditMode\", ctx_r0.editMode)(\"selectedTask\", ctx_r0.selectedTask);\n  }\n}\nfunction DashboardComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nfunction DashboardComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 13);\n  }\n}\nfunction DashboardComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h2\");\n    i0.ɵɵtext(2, \"No Task has been created yet !\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DashboardComponent_ng_container_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\")(5, \"b\");\n    i0.ɵɵtext(6, \"Assigned to: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\")(9, \"b\");\n    i0.ɵɵtext(10, \"Priority: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\")(13, \"b\");\n    i0.ɵɵtext(14, \"Status: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 18)(17, \"button\", 19);\n    i0.ɵɵelement(18, \"i\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_ng_container_18_div_1_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const task_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onEditClassClick(task_r9.id));\n    });\n    i0.ɵɵelement(20, \"i\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_ng_container_18_div_1_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const task_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.deleteTask(task_r9.id));\n    });\n    i0.ɵɵelement(22, \"i\", 24);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", \"task-\" + task_r9.status);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r9.title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r9.assignedTo);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r9.priority);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r9.status);\n  }\n}\nfunction DashboardComponent_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DashboardComponent_ng_container_18_div_1_Template, 23, 5, \"div\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.allTasks);\n  }\n}\nexport class DashboardComponent {\n  constructor() {\n    this.showCreateTaskForm = false;\n    this.http = inject(HttpClient);\n    this.allTasks = [];\n    this.taskService = inject(TaskService);\n    this.editMode = false;\n    this.isLoading = false;\n    this.errorMessage = null;\n  }\n  ngOnInit() {\n    this.fetchAllTask();\n  }\n  OpenCreateTaskForm() {\n    this.showCreateTaskForm = true;\n    this.editMode = false;\n    this.selectedTask = {\n      title: '',\n      description: '',\n      assignedTo: '',\n      createdAt: '',\n      priority: '',\n      status: '',\n      id: ''\n    };\n  }\n  CloseCreateTaskForm() {\n    this.showCreateTaskForm = false;\n  }\n  createOrUpdateTask(form) {\n    // console.log(\"Task Created\", form);\n    // // this.http.post('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form)\n    // // .subscribe( (response)=>{\n    // //   console.log(response);\n    // // });\n    // const headers = new HttpHeaders({ 'my-header': 'my-header-value' })\n    // this.http.post<{ name: string }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form, { headers: headers })\n    //   .subscribe((response) => {\n    //     console.log(response);\n    //   });\n    //   this.fetchAllTask();\n    if (this.editMode) {\n      this.taskService.updateTask(this.currentTaskId, form);\n    } else {\n      this.taskService.createTask(form);\n    }\n  }\n  fetchAllTask() {\n    // // this.http.get('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\n    // // .subscribe( (response) =>{\n    // //   console.log(response);\n    // // })\n    // this.http.get<{ [key: string]: Task }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\n    //   .pipe(map((response) => {\n    //     //transform data\n    //     let tasks = [];\n    //     for (let key in response) {\n    //       if (response.hasOwnProperty(key)) {\n    //         tasks.push({ ...response[key], id: key });\n    //       }\n    //     }\n    //     return tasks;\n    //   }))\n    //   .subscribe((response) => {\n    //     this.allTasks = response;\n    //     // console.log(response);\n    //   })\n    //   this.fetchAllTask();\n    this.isLoading = true;\n    this.taskService.getAllTasks().subscribe({\n      next: task => {\n        this.allTasks = task;\n        this.isLoading = false;\n      },\n      error: error => {\n        this.errorMessage = error.message;\n        this.isLoading = false;\n        setTimeout(() => {\n          this.errorMessage = null;\n        }, 3000);\n      }\n    });\n  }\n  fetchAllTasksToDisplay() {\n    this.fetchAllTask();\n  }\n  deleteTask(key) {\n    this.taskService.deleteTask(key);\n    this.fetchAllTask();\n  }\n  clearAllTasks() {\n    this.taskService.deleteAllTasks();\n    this.fetchAllTask();\n  }\n  onEditClassClick(key) {\n    // this.taskService.editTask(key);\n    this.showCreateTaskForm = true;\n    this.editMode = true;\n    // console.log(key);\n    this.selectedTask = this.allTasks.find(task => {\n      return task.id === key;\n    });\n    this.currentTaskId = key;\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 19,\n    vars: 5,\n    consts: [[3, \"isEditMode\", \"selectedTask\", \"CloseForm\", \"EmitTaskData\", 4, \"ngIf\"], [1, \"dashboard-container\"], [2, \"display\", \"flex\"], [2, \"width\", \"50%\"], [2, \"width\", \"50%\", \"text-align\", \"right\"], [1, \"create-task-btn\", 3, \"click\"], [1, \"dashboard-item-container\"], [\"class\", \"sb sb-error\", 4, \"ngIf\"], [\"class\", \"loader\", 4, \"ngIf\"], [\"class\", \"no-task\", \"style\", \"text-align : center\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"isEditMode\", \"selectedTask\", \"CloseForm\", \"EmitTaskData\"], [1, \"sb\", \"sb-error\"], [1, \"loader\"], [1, \"no-task\", 2, \"text-align\", \"center\"], [\"class\", \"task-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-item\", 3, \"ngClass\"], [1, \"task-title\"], [1, \"task-action-icons\"], [\"title\", \"Detail\", 1, \"task-action-btn\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-info-circle\"], [\"title\", \"Edit\", 1, \"task-action-btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-pencil-square-o\"], [\"title\", \"Delete\", 1, \"task-action-btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DashboardComponent_app_create_task_0_Template, 1, 2, \"app-create-task\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n        i0.ɵɵtext(5, \"Dashboard\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_7_listener() {\n          return ctx.OpenCreateTaskForm();\n        });\n        i0.ɵɵtext(8, \"Create Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_9_listener() {\n          return ctx.fetchAllTasksToDisplay();\n        });\n        i0.ɵɵtext(10, \"Fetch Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_11_listener() {\n          return ctx.clearAllTasks();\n        });\n        i0.ɵɵtext(12, \"Clear Tasks\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(13, \"hr\");\n        i0.ɵɵelementStart(14, \"div\", 6);\n        i0.ɵɵtemplate(15, DashboardComponent_div_15_Template, 2, 1, \"div\", 7);\n        i0.ɵɵtemplate(16, DashboardComponent_div_16_Template, 1, 0, \"div\", 8);\n        i0.ɵɵtemplate(17, DashboardComponent_div_17_Template, 3, 0, \"div\", 9);\n        i0.ɵɵtemplate(18, DashboardComponent_ng_container_18_Template, 2, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showCreateTaskForm);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.allTasks.length < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.CreateTaskComponent],\n    styles: [\".dashboard-container[_ngcontent-%COMP%]{\\n    padding: 30px 100px;\\n    background-color: #dedede;\\n}\\n\\nhr[_ngcontent-%COMP%]{\\n    border: #fff 1.5px solid;\\n    margin: 20px 0px;\\n}\\n.dashboard-item-container[_ngcontent-%COMP%]{\\n    margin-top: 30px;\\n    padding: 30px 50px;\\n    border: #fff 1.5px solid;\\n    display: flex;\\n    flex-wrap: wrap;\\n}\\n\\n.task-action-icons[_ngcontent-%COMP%]{\\n    text-align: right;\\n}\\n.task-action-btn[_ngcontent-%COMP%]{\\n    margin: 0px 5px;\\n    border: none;\\n    background-color: transparent;\\n}\\n\\ni[_ngcontent-%COMP%]{\\n    font-size: 16px;\\n}\\n\\n.task-item[_ngcontent-%COMP%]{\\n    width: 23%;\\n    margin: 10px 10px;\\n    padding: 15px 30px;\\n    background-color: #fff;\\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\\n    border-radius: 3px;\\n}\\n.task-complete[_ngcontent-%COMP%]{\\n    border-top: green 10px solid;\\n}\\n.task-in-progress[_ngcontent-%COMP%]{\\n    border-top: orange 10px solid;\\n}\\n.task-started[_ngcontent-%COMP%]{\\n    border-top: #3498DB 10px solid;\\n}\\n.task-open[_ngcontent-%COMP%]{\\n    border-top: red 10px solid;\\n}\\n.task-title[_ngcontent-%COMP%]{\\n    border-bottom: #28282B 2px solid;\\n}\\n\\n.create-task-btn[_ngcontent-%COMP%]{\\n    padding: 12px 30px;\\n    background-color: #3498DB;\\n    border: #cdcdcd 1px solid;\\n    color: white;\\n}\\n\\n.loader[_ngcontent-%COMP%] {\\n    border: 16px solid #f3f3f3; \\n\\n    border-top: 16px solid #3498db; \\n\\n    border-radius: 50%;\\n    width: 120px;\\n    height: 120px;\\n    animation: _ngcontent-%COMP%_spin 2s linear infinite;\\n    margin: 0 auto;\\n  }\\n  \\n  @keyframes _ngcontent-%COMP%_spin {\\n    0% { transform: rotate(0deg); }\\n    100% { transform: rotate(360deg); }\\n  }\\n\\n  .sb[_ngcontent-%COMP%] {\\n    min-width: 350px; \\n\\n    margin-left: -125px; \\n\\n    text-align: center; \\n\\n    border-radius: 2px; \\n\\n    padding: 16px; \\n\\n    border-radius: 5px;\\n    position: fixed; \\n\\n    z-index: 1; \\n\\n    left: 50%; \\n\\n    top: 40px; \\n\\n    animation: _ngcontent-%COMP%_fadein 0.5s, _ngcontent-%COMP%_fadeout 0.5s 2.5s;\\n  }\\n\\n  .sb-error[_ngcontent-%COMP%]{\\n    background-color: #E74C3C; \\n\\n    color: #fff; \\n\\n  }\\n\\n  .sb-success[_ngcontent-%COMP%]{\\n    background-color: #1ABC9C; \\n\\n    color: #28282B; \\n\\n  }\\n\\n  \\n\\n  \\n  @keyframes _ngcontent-%COMP%_fadein {\\n    from {top: 0; opacity: 0;}\\n    to {top: 40px; opacity: 1;}\\n  }\\n  \\n  @keyframes _ngcontent-%COMP%_fadeout {\\n    from {top: 30px; opacity: 1;}\\n    to {top: 0; opacity: 0;}\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0lBQ25CLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsd0JBQXdCO0lBQ3hCLGFBQWE7SUFDYixlQUFlO0FBQ25COztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsNENBQTRDO0lBQzVDLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksNEJBQTRCO0FBQ2hDO0FBQ0E7SUFDSSw2QkFBNkI7QUFDakM7QUFDQTtJQUNJLDhCQUE4QjtBQUNsQztBQUNBO0lBQ0ksMEJBQTBCO0FBQzlCO0FBQ0E7SUFDSSxnQ0FBZ0M7QUFDcEM7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLHlCQUF5QjtJQUN6QixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksMEJBQTBCLEVBQUUsZUFBZTtJQUMzQyw4QkFBOEIsRUFBRSxTQUFTO0lBQ3pDLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osYUFBYTtJQUNiLGtDQUFrQztJQUNsQyxjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsS0FBSyx1QkFBdUIsRUFBRTtJQUM5QixPQUFPLHlCQUF5QixFQUFFO0VBQ3BDOztFQUVBO0lBQ0UsZ0JBQWdCLEVBQUUsZ0NBQWdDO0lBQ2xELG1CQUFtQixFQUFFLG1DQUFtQztJQUN4RCxrQkFBa0IsRUFBRSxrQkFBa0I7SUFDdEMsa0JBQWtCLEVBQUUsb0JBQW9CO0lBQ3hDLGFBQWEsRUFBRSxZQUFZO0lBQzNCLGtCQUFrQjtJQUNsQixlQUFlLEVBQUUsNkJBQTZCO0lBQzlDLFVBQVUsRUFBRSw0QkFBNEI7SUFDeEMsU0FBUyxFQUFFLHdCQUF3QjtJQUNuQyxTQUFTLEVBQUUseUJBQXlCO0lBRXBDLHlDQUF5QztFQUMzQzs7RUFFQTtJQUNFLHlCQUF5QixFQUFFLDJCQUEyQjtJQUN0RCxXQUFXLEVBQUUscUJBQXFCO0VBQ3BDOztFQUVBO0lBQ0UseUJBQXlCLEVBQUUsMkJBQTJCO0lBQ3RELGNBQWMsRUFBRSxxQkFBcUI7RUFDdkM7O0VBRUEsK0NBQStDOztFQU0vQztJQUNFLE1BQU0sTUFBTSxFQUFFLFVBQVUsQ0FBQztJQUN6QixJQUFJLFNBQVMsRUFBRSxVQUFVLENBQUM7RUFDNUI7O0VBT0E7SUFDRSxNQUFNLFNBQVMsRUFBRSxVQUFVLENBQUM7SUFDNUIsSUFBSSxNQUFNLEVBQUUsVUFBVSxDQUFDO0VBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZC1jb250YWluZXJ7XHJcbiAgICBwYWRkaW5nOiAzMHB4IDEwMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2RlZGVkZTtcclxufVxyXG5cclxuaHJ7XHJcbiAgICBib3JkZXI6ICNmZmYgMS41cHggc29saWQ7XHJcbiAgICBtYXJnaW46IDIwcHggMHB4O1xyXG59XHJcbi5kYXNoYm9hcmQtaXRlbS1jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgcGFkZGluZzogMzBweCA1MHB4O1xyXG4gICAgYm9yZGVyOiAjZmZmIDEuNXB4IHNvbGlkO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxufVxyXG5cclxuLnRhc2stYWN0aW9uLWljb25ze1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn1cclxuLnRhc2stYWN0aW9uLWJ0bntcclxuICAgIG1hcmdpbjogMHB4IDVweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG5pe1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG4udGFzay1pdGVte1xyXG4gICAgd2lkdGg6IDIzJTtcclxuICAgIG1hcmdpbjogMTBweCAxMHB4O1xyXG4gICAgcGFkZGluZzogMTVweCAzMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4zNSkgMHB4IDVweCAxNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG59XHJcbi50YXNrLWNvbXBsZXRle1xyXG4gICAgYm9yZGVyLXRvcDogZ3JlZW4gMTBweCBzb2xpZDtcclxufVxyXG4udGFzay1pbi1wcm9ncmVzc3tcclxuICAgIGJvcmRlci10b3A6IG9yYW5nZSAxMHB4IHNvbGlkO1xyXG59XHJcbi50YXNrLXN0YXJ0ZWR7XHJcbiAgICBib3JkZXItdG9wOiAjMzQ5OERCIDEwcHggc29saWQ7XHJcbn1cclxuLnRhc2stb3BlbntcclxuICAgIGJvcmRlci10b3A6IHJlZCAxMHB4IHNvbGlkO1xyXG59XHJcbi50YXNrLXRpdGxle1xyXG4gICAgYm9yZGVyLWJvdHRvbTogIzI4MjgyQiAycHggc29saWQ7XHJcbn1cclxuXHJcbi5jcmVhdGUtdGFzay1idG57XHJcbiAgICBwYWRkaW5nOiAxMnB4IDMwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ5OERCO1xyXG4gICAgYm9yZGVyOiAjY2RjZGNkIDFweCBzb2xpZDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmxvYWRlciB7XHJcbiAgICBib3JkZXI6IDE2cHggc29saWQgI2YzZjNmMzsgLyogTGlnaHQgZ3JleSAqL1xyXG4gICAgYm9yZGVyLXRvcDogMTZweCBzb2xpZCAjMzQ5OGRiOyAvKiBCbHVlICovXHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB3aWR0aDogMTIwcHg7XHJcbiAgICBoZWlnaHQ6IDEyMHB4O1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gIH1cclxuICBcclxuICBAa2V5ZnJhbWVzIHNwaW4ge1xyXG4gICAgMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfVxyXG4gICAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH1cclxuICB9XHJcblxyXG4gIC5zYiB7XHJcbiAgICBtaW4td2lkdGg6IDM1MHB4OyAvKiBTZXQgYSBkZWZhdWx0IG1pbmltdW0gd2lkdGggKi9cclxuICAgIG1hcmdpbi1sZWZ0OiAtMTI1cHg7IC8qIERpdmlkZSB2YWx1ZSBvZiBtaW4td2lkdGggYnkgMiAqL1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyAvKiBDZW50ZXJlZCB0ZXh0ICovXHJcbiAgICBib3JkZXItcmFkaXVzOiAycHg7IC8qIFJvdW5kZWQgYm9yZGVycyAqL1xyXG4gICAgcGFkZGluZzogMTZweDsgLyogUGFkZGluZyAqL1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcG9zaXRpb246IGZpeGVkOyAvKiBTaXQgb24gdG9wIG9mIHRoZSBzY3JlZW4gKi9cclxuICAgIHotaW5kZXg6IDE7IC8qIEFkZCBhIHotaW5kZXggaWYgbmVlZGVkICovXHJcbiAgICBsZWZ0OiA1MCU7IC8qIENlbnRlciB0aGUgc25hY2tiYXIgKi9cclxuICAgIHRvcDogNDBweDsgLyogMzBweCBmcm9tIHRoZSBib3R0b20gKi9cclxuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBmYWRlaW4gMC41cywgZmFkZW91dCAwLjVzIDIuNXM7XHJcbiAgICBhbmltYXRpb246IGZhZGVpbiAwLjVzLCBmYWRlb3V0IDAuNXMgMi41cztcclxuICB9XHJcblxyXG4gIC5zYi1lcnJvcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFNzRDM0M7IC8qIEJsYWNrIGJhY2tncm91bmQgY29sb3IgKi9cclxuICAgIGNvbG9yOiAjZmZmOyAvKiBXaGl0ZSB0ZXh0IGNvbG9yICovXHJcbiAgfVxyXG5cclxuICAuc2Itc3VjY2Vzc3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxQUJDOUM7IC8qIEJsYWNrIGJhY2tncm91bmQgY29sb3IgKi9cclxuICAgIGNvbG9yOiAjMjgyODJCOyAvKiBXaGl0ZSB0ZXh0IGNvbG9yICovXHJcbiAgfVxyXG5cclxuICAvKiBBbmltYXRpb25zIHRvIGZhZGUgdGhlIHNuYWNrYmFyIGluIGFuZCBvdXQgKi9cclxuQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVpbiB7XHJcbiAgICBmcm9tIHt0b3A6IDA7IG9wYWNpdHk6IDA7fVxyXG4gICAgdG8ge3RvcDogNDBweDsgb3BhY2l0eTogMTt9XHJcbiAgfVxyXG4gIFxyXG4gIEBrZXlmcmFtZXMgZmFkZWluIHtcclxuICAgIGZyb20ge3RvcDogMDsgb3BhY2l0eTogMDt9XHJcbiAgICB0byB7dG9wOiA0MHB4OyBvcGFjaXR5OiAxO31cclxuICB9XHJcbiAgXHJcbiAgQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVvdXQge1xyXG4gICAgZnJvbSB7dG9wOiAzMHB4OyBvcGFjaXR5OiAxO31cclxuICAgIHRvIHt0b3A6IDA7IG9wYWNpdHk6IDA7fVxyXG4gIH1cclxuICBcclxuICBAa2V5ZnJhbWVzIGZhZGVvdXQge1xyXG4gICAgZnJvbSB7dG9wOiAzMHB4OyBvcGFjaXR5OiAxO31cclxuICAgIHRvIHt0b3A6IDA7IG9wYWNpdHk6IDA7fVxyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["inject","HttpClient","TaskService","i0","ɵɵelementStart","ɵɵlistener","DashboardComponent_app_create_task_0_Template_app_create_task_CloseForm_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","CloseCreateTaskForm","DashboardComponent_app_create_task_0_Template_app_create_task_EmitTaskData_0_listener","$event","ctx_r7","createOrUpdateTask","ɵɵelementEnd","ɵɵproperty","ctx_r0","editMode","selectedTask","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","errorMessage","ɵɵelement","DashboardComponent_ng_container_18_div_1_Template_button_click_19_listener","restoredCtx","_r11","task_r9","$implicit","ctx_r10","onEditClassClick","id","DashboardComponent_ng_container_18_div_1_Template_button_click_21_listener","ctx_r12","deleteTask","status","title","assignedTo","priority","ɵɵelementContainerStart","ɵɵtemplate","DashboardComponent_ng_container_18_div_1_Template","ɵɵelementContainerEnd","ctx_r4","allTasks","DashboardComponent","constructor","showCreateTaskForm","http","taskService","isLoading","ngOnInit","fetchAllTask","OpenCreateTaskForm","description","createdAt","form","updateTask","currentTaskId","createTask","getAllTasks","subscribe","next","task","error","message","setTimeout","fetchAllTasksToDisplay","key","clearAllTasks","deleteAllTasks","find","_","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_app_create_task_0_Template","DashboardComponent_Template_button_click_7_listener","DashboardComponent_Template_button_click_9_listener","DashboardComponent_Template_button_click_11_listener","DashboardComponent_div_15_Template","DashboardComponent_div_16_Template","DashboardComponent_div_17_Template","DashboardComponent_ng_container_18_Template","length"],"sources":["E:\\sails\\Angular\\angular-http-client\\src\\app\\dashboard\\dashboard.component.ts","E:\\sails\\Angular\\angular-http-client\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\r\nimport { Task } from '../model/task';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs';\r\nimport { TaskService } from '../services/Task.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  showCreateTaskForm: boolean = false;\r\n\r\n  http: HttpClient = inject(HttpClient);\r\n\r\n  allTasks: Task[] = [];\r\n\r\n  taskService: TaskService = inject(TaskService);\r\n\r\n  editMode: boolean = false;\r\n\r\n  selectedTask: Task;\r\n  currentTaskId : string;\r\n\r\n  isLoading : boolean = false;\r\n\r\n  errorMessage : string | null = null;\r\n  ngOnInit(): void {\r\n    this.fetchAllTask();\r\n  }\r\n  OpenCreateTaskForm() {\r\n    this.showCreateTaskForm = true;\r\n    this.editMode = false;\r\n    this.selectedTask = {\r\n      title: '', description: '', assignedTo: '', createdAt: '', priority: '', status: '', id: ''\r\n    }\r\n  }\r\n\r\n  CloseCreateTaskForm() {\r\n    this.showCreateTaskForm = false;\r\n  }\r\n\r\n  createOrUpdateTask(form: Task) {\r\n    // console.log(\"Task Created\", form);\r\n    // // this.http.post('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form)\r\n    // // .subscribe( (response)=>{\r\n    // //   console.log(response);\r\n    // // });\r\n\r\n    // const headers = new HttpHeaders({ 'my-header': 'my-header-value' })\r\n    // this.http.post<{ name: string }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form, { headers: headers })\r\n    //   .subscribe((response) => {\r\n    //     console.log(response);\r\n    //   });\r\n    //   this.fetchAllTask();\r\n\r\n\r\n    if(this.editMode){\r\n      this.taskService.updateTask(this.currentTaskId, form);\r\n    }else{\r\n      this.taskService.createTask(form);\r\n    }\r\n  }\r\n\r\n  private fetchAllTask() {\r\n    // // this.http.get('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\r\n    // // .subscribe( (response) =>{\r\n    // //   console.log(response);\r\n    // // })\r\n\r\n    // this.http.get<{ [key: string]: Task }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\r\n    //   .pipe(map((response) => {\r\n    //     //transform data\r\n    //     let tasks = [];\r\n\r\n    //     for (let key in response) {\r\n    //       if (response.hasOwnProperty(key)) {\r\n    //         tasks.push({ ...response[key], id: key });\r\n    //       }\r\n    //     }\r\n    //     return tasks;\r\n    //   }))\r\n    //   .subscribe((response) => {\r\n    //     this.allTasks = response;\r\n    //     // console.log(response);\r\n    //   })\r\n    //   this.fetchAllTask();\r\n    this.isLoading = true;\r\n    this.taskService.getAllTasks().subscribe( {next : (task: Task[]) => {\r\n      this.allTasks = task; \r\n      this.isLoading = false;\r\n    },\r\n    error : (error) =>{\r\n      this.errorMessage = error.message;\r\n      this.isLoading = false;\r\n      setTimeout(() => {\r\n        this.errorMessage = null;\r\n      }, 3000);\r\n    },\r\n  }\r\n  )\r\n  }\r\n\r\n  private setErrorMessage (err : HttpErrorRespn)\r\n\r\n  fetchAllTasksToDisplay() {\r\n    this.fetchAllTask();\r\n  }\r\n\r\n  deleteTask(key: string) {\r\n    this.taskService.deleteTask(key);\r\n    this.fetchAllTask();\r\n  }\r\n  clearAllTasks() {\r\n    this.taskService.deleteAllTasks();\r\n    this.fetchAllTask();\r\n  }\r\n\r\n  onEditClassClick(key: string) {\r\n    // this.taskService.editTask(key);\r\n    this.showCreateTaskForm = true;\r\n    this.editMode = true;\r\n    // console.log(key);\r\n\r\n    this.selectedTask = this.allTasks.find((task) => {\r\n      return task.id === key;\r\n    })\r\n\r\n    this.currentTaskId = key;\r\n  }\r\n}\r\n","<app-create-task \r\n        *ngIf=\"showCreateTaskForm\" \r\n        (CloseForm)=\"CloseCreateTaskForm()\"\r\n        (EmitTaskData) = \"createOrUpdateTask($event)\"\r\n        [isEditMode]=\"editMode\"\r\n        [selectedTask]=\"selectedTask\"\r\n></app-create-task>\r\n\r\n<div class=\"dashboard-container\">\r\n    <div style=\"display: flex;\">\r\n        <div style=\"width: 50%\">\r\n            <h2>Dashboard</h2>\r\n        </div>\r\n        <div style=\"width: 50%; text-align: right;\">\r\n            <button class=\"create-task-btn\" (click)=\"OpenCreateTaskForm()\">Create Task</button>\r\n            <button class=\"create-task-btn\" (click)=\"fetchAllTasksToDisplay()\">Fetch Tasks</button>\r\n            <button class=\"create-task-btn\" (click)=\"clearAllTasks()\">Clear Tasks</button>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <div class=\"dashboard-item-container\">\r\n        <div class=\"sb sb-error\" *ngIf=\"errorMessage\">{{ errorMessage }}</div>\r\n        <div class=\"loader\" *ngIf=\"isLoading\"></div>\r\n        <div class=\"no-task\" style=\"text-align : center\" *ngIf=\"allTasks.length<1\" >\r\n            <h2 >No Task has been created yet !</h2>\r\n        </div>\r\n            <ng-container *ngIf=\"!isLoading\">\r\n                <div class=\"task-item\" [ngClass]=\"'task-'+ task.status\" *ngFor=\"let task of allTasks\">\r\n                    <div class=\"task-title\">\r\n                        <h3>{{ task.title }}</h3>\r\n                    </div>\r\n                    <p><b>Assigned to: </b>{{ task.assignedTo }}</p>\r\n                    <p><b>Priority: </b>{{ task.priority }}</p>\r\n                    <p><b>Status: </b>{{ task.status }}</p>\r\n                    <div class=\"task-action-icons\">\r\n                        <button class=\"task-action-btn\" title=\"Detail\" >\r\n                            <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <button class=\"task-action-btn\" title=\"Edit\" (click)=\"onEditClassClick(task.id)\">\r\n                            <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <button class=\"task-action-btn\" title=\"Delete\" (click)=\"deleteTask(task.id)\">\r\n                            <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </button>            \r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n\r\n           \r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}