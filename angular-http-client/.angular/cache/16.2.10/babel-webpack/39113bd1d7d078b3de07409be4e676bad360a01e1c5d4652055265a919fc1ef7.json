{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TaskService } from '../services/Task.service';\nexport let DashboardComponent = class DashboardComponent {\n  constructor() {\n    this.showCreateTaskForm = false;\n    this.http = inject(HttpClient);\n    this.allTasks = [];\n    this.taskService = inject(TaskService);\n    this.editMode = false;\n    this.isLoading = false;\n    this.errorMessage = null;\n    this.showTaskDetails = false;\n  }\n  ngOnInit() {\n    this.fetchAllTask();\n    this.errorSub = this.taskService.errorSubject.subscribe({\n      next: err => {\n        this.errorMessage = err.message;\n        this.setErrorMessage(err);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n  }\n  OpenCreateTaskForm() {\n    this.showCreateTaskForm = true;\n    this.editMode = false;\n    this.selectedTask = {\n      title: '',\n      description: '',\n      assignedTo: '',\n      createdAt: '',\n      priority: '',\n      status: '',\n      id: ''\n    };\n  }\n  CloseCreateTaskForm() {\n    this.showCreateTaskForm = false;\n  }\n  createOrUpdateTask(form) {\n    // console.log(\"Task Created\", form);\n    // // this.http.post('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form)\n    // // .subscribe( (response)=>{\n    // //   console.log(response);\n    // // });\n    // const headers = new HttpHeaders({ 'my-header': 'my-header-value' })\n    // this.http.post<{ name: string }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form, { headers: headers })\n    //   .subscribe((response) => {\n    //     console.log(response);\n    //   });\n    //   this.fetchAllTask();\n    if (this.editMode) {\n      this.taskService.updateTask(this.currentTaskId, form);\n    } else {\n      this.taskService.createTask(form);\n    }\n  }\n  fetchAllTask() {\n    // // this.http.get('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\n    // // .subscribe( (response) =>{\n    // //   console.log(response);\n    // // })\n    // this.http.get<{ [key: string]: Task }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\n    //   .pipe(map((response) => {\n    //     //transform data\n    //     let tasks = [];\n    //     for (let key in response) {\n    //       if (response.hasOwnProperty(key)) {\n    //         tasks.push({ ...response[key], id: key });\n    //       }\n    //     }\n    //     return tasks;\n    //   }))\n    //   .subscribe((response) => {\n    //     this.allTasks = response;\n    //     // console.log(response);\n    //   })\n    //   this.fetchAllTask();\n    this.isLoading = true;\n    this.taskService.getAllTasks().subscribe({\n      next: task => {\n        this.allTasks = task;\n        this.isLoading = false;\n      },\n      error: error => {\n        this.errorMessage = error.message;\n        this.setErrorMessage(error);\n        this.isLoading = false;\n      }\n    });\n  }\n  setErrorMessage(err) {\n    console.log(err);\n    if (err.error.error === 'Permission denied') {\n      this.errorMessage = 'You do not have permission to perform action';\n    } else {\n      this.errorMessage = err.message;\n    }\n    setTimeout(() => {\n      this.errorMessage = null;\n    }, 3000);\n  }\n  fetchAllTasksToDisplay() {\n    this.fetchAllTask();\n  }\n  deleteTask(key) {\n    this.taskService.deleteTask(key);\n    this.fetchAllTask();\n  }\n  clearAllTasks() {\n    this.taskService.deleteAllTasks();\n    this.fetchAllTask();\n  }\n  onEditClassClick(key) {\n    // this.taskService.editTask(key);\n    this.showCreateTaskForm = true;\n    this.editMode = true;\n    // console.log(key);\n    this.selectedTask = this.allTasks.find(task => {\n      return task.id === key;\n    });\n    this.currentTaskId = key;\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["Component","inject","HttpClient","TaskService","DashboardComponent","constructor","showCreateTaskForm","http","allTasks","taskService","editMode","isLoading","errorMessage","showTaskDetails","ngOnInit","fetchAllTask","errorSub","errorSubject","subscribe","next","err","message","setErrorMessage","ngOnDestroy","unsubscribe","OpenCreateTaskForm","selectedTask","title","description","assignedTo","createdAt","priority","status","id","CloseCreateTaskForm","createOrUpdateTask","form","updateTask","currentTaskId","createTask","getAllTasks","task","error","console","log","setTimeout","fetchAllTasksToDisplay","deleteTask","key","clearAllTasks","deleteAllTasks","onEditClassClick","find","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\sails\\Angular\\angular-http-client\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\r\nimport { Task } from '../model/task';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { map, Subscription } from 'rxjs';\r\nimport { TaskService } from '../services/Task.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  showCreateTaskForm: boolean = false;\r\n\r\n  http: HttpClient = inject(HttpClient);\r\n\r\n  allTasks: Task[] = [];\r\n\r\n  taskService: TaskService = inject(TaskService);\r\n\r\n  editMode: boolean = false;\r\n\r\n  selectedTask: Task;\r\n  currentTaskId: string;\r\n\r\n  isLoading: boolean = false;\r\n\r\n  errorMessage: string | null = null;\r\n\r\n  errorSub : Subscription;\r\n\r\n  showTaskDetails : boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.fetchAllTask();\r\n    \r\n    this.errorSub = this.taskService.errorSubject.subscribe({\r\n      next: (err) => {\r\n        this.errorMessage = err.message;\r\n        this.setErrorMessage(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.errorSub.unsubscribe();\r\n  }\r\n  OpenCreateTaskForm() {\r\n    this.showCreateTaskForm = true;\r\n    this.editMode = false;\r\n    this.selectedTask = {\r\n      title: '', description: '', assignedTo: '', createdAt: '', priority: '', status: '', id: ''\r\n    }\r\n  }\r\n\r\n  CloseCreateTaskForm() {\r\n    this.showCreateTaskForm = false;\r\n  }\r\n\r\n  createOrUpdateTask(form: Task) {\r\n    // console.log(\"Task Created\", form);\r\n    // // this.http.post('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form)\r\n    // // .subscribe( (response)=>{\r\n    // //   console.log(response);\r\n    // // });\r\n\r\n    // const headers = new HttpHeaders({ 'my-header': 'my-header-value' })\r\n    // this.http.post<{ name: string }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', form, { headers: headers })\r\n    //   .subscribe((response) => {\r\n    //     console.log(response);\r\n    //   });\r\n    //   this.fetchAllTask();\r\n\r\n\r\n    if (this.editMode) {\r\n      this.taskService.updateTask(this.currentTaskId, form);\r\n    } else {\r\n      this.taskService.createTask(form);\r\n    }\r\n  }\r\n\r\n  private fetchAllTask() {\r\n    // // this.http.get('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\r\n    // // .subscribe( (response) =>{\r\n    // //   console.log(response);\r\n    // // })\r\n\r\n    // this.http.get<{ [key: string]: Task }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app//tasks.json')\r\n    //   .pipe(map((response) => {\r\n    //     //transform data\r\n    //     let tasks = [];\r\n\r\n    //     for (let key in response) {\r\n    //       if (response.hasOwnProperty(key)) {\r\n    //         tasks.push({ ...response[key], id: key });\r\n    //       }\r\n    //     }\r\n    //     return tasks;\r\n    //   }))\r\n    //   .subscribe((response) => {\r\n    //     this.allTasks = response;\r\n    //     // console.log(response);\r\n    //   })\r\n    //   this.fetchAllTask();\r\n    this.isLoading = true;\r\n    this.taskService.getAllTasks().subscribe({\r\n      next: (task: Task[]) => {\r\n        this.allTasks = task;\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        this.errorMessage = error.message;\r\n        this.setErrorMessage(error);\r\n        this.isLoading = false;\r\n        \r\n      },\r\n    });\r\n  }\r\n\r\n  private setErrorMessage(err: HttpErrorResponse) {\r\n    console.log(err)\r\n    if (err.error.error === 'Permission denied') {\r\n      this.errorMessage = 'You do not have permission to perform action';\r\n    }\r\n    else{\r\n      this.errorMessage = err.message;\r\n    }\r\n    setTimeout(() => {\r\n      this.errorMessage = null;\r\n    }, 3000);\r\n  }\r\n\r\n  fetchAllTasksToDisplay() {\r\n    this.fetchAllTask();\r\n  }\r\n\r\n  deleteTask(key: string) {\r\n    this.taskService.deleteTask(key);\r\n    this.fetchAllTask();\r\n  }\r\n  clearAllTasks() {\r\n    this.taskService.deleteAllTasks();\r\n    this.fetchAllTask();\r\n  }\r\n\r\n  onEditClassClick(key: string) {\r\n    // this.taskService.editTask(key);\r\n    this.showCreateTaskForm = true;\r\n    this.editMode = true;\r\n    // console.log(key);\r\n\r\n    this.selectedTask = this.allTasks.find((task) => {\r\n      return task.id === key;\r\n    })\r\n\r\n    this.currentTaskId = key;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}