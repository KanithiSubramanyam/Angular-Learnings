{"ast":null,"code":"export class AuthInterceptorService {\n  intercept(req, next) {\n    const modifiedReq = req.clone({\n      headers: req.headers.append('auth', 'xyz')\n    });\n    // console.log('AuthInterceptorService - intercept()');\n    return next.handle(modifiedReq).pipe;\n  }\n}","map":{"version":3,"names":["AuthInterceptorService","intercept","req","next","modifiedReq","clone","headers","append","handle","pipe"],"sources":["E:\\sails\\Angular\\angular-http-client\\src\\app\\services\\auth-interceptors.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n\r\nexport class AuthInterceptorService implements HttpInterceptor{\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        \r\n        const modifiedReq = req.clone({headers: req.headers.append('auth', 'xyz')});\r\n        // console.log('AuthInterceptorService - intercept()');\r\n        return next.handle(modifiedReq).pipe;\r\n    }\r\n}"],"mappings":"AAKA,OAAM,MAAOA,sBAAsB;EAC/BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAE9C,MAAMC,WAAW,GAAGF,GAAG,CAACG,KAAK,CAAC;MAACC,OAAO,EAAEJ,GAAG,CAACI,OAAO,CAACC,MAAM,CAAC,MAAM,EAAE,KAAK;IAAC,CAAC,CAAC;IAC3E;IACA,OAAOJ,IAAI,CAACK,MAAM,CAACJ,WAAW,CAAC,CAACK,IAAI;EACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}