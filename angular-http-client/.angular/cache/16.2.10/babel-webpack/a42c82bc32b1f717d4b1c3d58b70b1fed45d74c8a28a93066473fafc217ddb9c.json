{"ast":null,"code":"import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { inject } from \"@angular/core\";\nimport { catchError, map, Subject, throwError } from \"rxjs\";\nimport { LoggingService } from \"./Logging.service\";\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.http = inject(HttpClient);\n    this.errorSubject = new Subject();\n    this.loggingService = inject(LoggingService);\n  }\n  createTask(task) {\n    const headers = new HttpHeaders({\n      'my-header': 'my-header-value'\n    });\n    this.http.post('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', task, {\n      headers: headers\n    }).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  deleteTask(key) {\n    this.http.delete('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks/' + key + '.json').subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  deleteAllTasks() {\n    this.http.delete('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json').subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  getAllTasks() {\n    return this.http.get('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json').pipe(map(response => {\n      let tasks = [];\n      for (let key in response) {\n        if (response.hasOwnProperty(key)) {\n          tasks.push({\n            ...response[key],\n            id: key\n          });\n        }\n      }\n      return tasks;\n    }), catchError(err => {\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message\n      };\n      return throwError(() => err);\n    }));\n  }\n  updateTask(id, task) {\n    this.http.put('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks/' + id + '.json', task).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpClient","HttpHeaders","inject","catchError","map","Subject","throwError","LoggingService","TaskService","constructor","http","errorSubject","loggingService","createTask","task","headers","post","subscribe","error","err","next","deleteTask","key","delete","deleteAllTasks","getAllTasks","get","pipe","response","tasks","hasOwnProperty","push","id","errorObj","statusCode","status","errorMessage","message","updateTask","put","_","_2","factory","ɵfac","providedIn"],"sources":["E:\\sails\\Angular\\angular-http-client\\src\\app\\services\\Task.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { Task } from \"../model/task\";\r\nimport { catchError, map, Subject, throwError } from \"rxjs\";\r\nimport { LoggingService } from \"./Logging.service\";\r\n\r\n@Injectable(\r\n    {\r\n        providedIn: 'root'\r\n    }\r\n)\r\nexport class TaskService {\r\n\r\n    http: HttpClient = inject(HttpClient);\r\n    errorSubject = new Subject<HttpErrorResponse>();\r\n\r\n    loggingService: LoggingService = inject(LoggingService);\r\n\r\n\r\n    createTask(task: Task) {\r\n        const headers = new HttpHeaders({ 'my-header': 'my-header-value' })\r\n        this.http.post<{ name: string }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', task, { headers: headers })\r\n            .subscribe({\r\n                error : (err)=>{\r\n                    this.errorSubject.next(err);\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteTask(key: string | undefined) {\r\n        this.http.delete('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks/' + key + '.json')\r\n        .subscribe({\r\n            error : (err)=>{\r\n                this.errorSubject.next(err);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    deleteAllTasks() {\r\n        this.http.delete('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json')\r\n        .subscribe({\r\n            error : (err)=>{\r\n                this.errorSubject.next(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    getAllTasks(){\r\n        return this.http.get<Task[]>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json')\r\n        .pipe(map((response)=>{\r\n            let tasks = [];\r\n\r\n            for(let key in response){\r\n                if(response.hasOwnProperty(key)){\r\n                    tasks.push({...response[key], id: key})\r\n\r\n                }\r\n            }\r\n            return tasks; \r\n        }),\r\n        catchError( (err)=>{\r\n            const errorObj = {statusCode:err.status, errorMessage:err.message}\r\n            return throwError(()=>err);\r\n        }))\r\n\r\n    }\r\n\r\n    updateTask(id:string, task: Task){\r\n        this.http.put('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks/' + id + '.json', task)\r\n        .subscribe({\r\n            error : (err)=>{\r\n                this.errorSubject.next(err);\r\n            }\r\n        });\r\n    }\r\n}"],"mappings":"AAAA,SAASA,UAAU,EAAqBC,WAAW,QAAQ,sBAAsB;AACjF,SAASC,MAAM,QAAoB,eAAe;AAElD,SAASC,UAAU,EAAEC,GAAG,EAAEC,OAAO,EAAEC,UAAU,QAAQ,MAAM;AAC3D,SAASC,cAAc,QAAQ,mBAAmB;;AAOlD,OAAM,MAAOC,WAAW;EALxBC,YAAA;IAOI,KAAAC,IAAI,GAAeR,MAAM,CAACF,UAAU,CAAC;IACrC,KAAAW,YAAY,GAAG,IAAIN,OAAO,EAAqB;IAE/C,KAAAO,cAAc,GAAmBV,MAAM,CAACK,cAAc,CAAC;;EAGvDM,UAAUA,CAACC,IAAU;IACjB,MAAMC,OAAO,GAAG,IAAId,WAAW,CAAC;MAAE,WAAW,EAAE;IAAiB,CAAE,CAAC;IACnE,IAAI,CAACS,IAAI,CAACM,IAAI,CAAmB,+FAA+F,EAAEF,IAAI,EAAE;MAAEC,OAAO,EAAEA;IAAO,CAAE,CAAC,CACxJE,SAAS,CAAC;MACPC,KAAK,EAAIC,GAAG,IAAG;QACX,IAAI,CAACR,YAAY,CAACS,IAAI,CAACD,GAAG,CAAC;MAC/B;KACH,CAAC;EACV;EAEAE,UAAUA,CAACC,GAAuB;IAC9B,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAC,2FAA2F,GAAGD,GAAG,GAAG,OAAO,CAAC,CAC5HL,SAAS,CAAC;MACPC,KAAK,EAAIC,GAAG,IAAG;QACX,IAAI,CAACR,YAAY,CAACS,IAAI,CAACD,GAAG,CAAC;MAC/B;KACH,CAAC;EAEN;EAEAK,cAAcA,CAAA;IACV,IAAI,CAACd,IAAI,CAACa,MAAM,CAAC,+FAA+F,CAAC,CAChHN,SAAS,CAAC;MACPC,KAAK,EAAIC,GAAG,IAAG;QACX,IAAI,CAACR,YAAY,CAACS,IAAI,CAACD,GAAG,CAAC;MAC/B;KACH,CAAC;EACN;EAEAM,WAAWA,CAAA;IACP,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAS,+FAA+F,CAAC,CAC5HC,IAAI,CAACvB,GAAG,CAAEwB,QAAQ,IAAG;MAClB,IAAIC,KAAK,GAAG,EAAE;MAEd,KAAI,IAAIP,GAAG,IAAIM,QAAQ,EAAC;QACpB,IAAGA,QAAQ,CAACE,cAAc,CAACR,GAAG,CAAC,EAAC;UAC5BO,KAAK,CAACE,IAAI,CAAC;YAAC,GAAGH,QAAQ,CAACN,GAAG,CAAC;YAAEU,EAAE,EAAEV;UAAG,CAAC,CAAC;;;MAI/C,OAAOO,KAAK;IAChB,CAAC,CAAC,EACF1B,UAAU,CAAGgB,GAAG,IAAG;MACf,MAAMc,QAAQ,GAAG;QAACC,UAAU,EAACf,GAAG,CAACgB,MAAM;QAAEC,YAAY,EAACjB,GAAG,CAACkB;MAAO,CAAC;MAClE,OAAO/B,UAAU,CAAC,MAAIa,GAAG,CAAC;IAC9B,CAAC,CAAC,CAAC;EAEP;EAEAmB,UAAUA,CAACN,EAAS,EAAElB,IAAU;IAC5B,IAAI,CAACJ,IAAI,CAAC6B,GAAG,CAAC,2FAA2F,GAAGP,EAAE,GAAG,OAAO,EAAElB,IAAI,CAAC,CAC9HG,SAAS,CAAC;MACPC,KAAK,EAAIC,GAAG,IAAG;QACX,IAAI,CAACR,YAAY,CAACS,IAAI,CAACD,GAAG,CAAC;MAC/B;KACH,CAAC;EACN;EAAC,QAAAqB,CAAA,G;qBAhEQhC,WAAW;EAAA;EAAA,QAAAiC,EAAA,G;WAAXjC,WAAW;IAAAkC,OAAA,EAAXlC,WAAW,CAAAmC,IAAA;IAAAC,UAAA,EAHJ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}