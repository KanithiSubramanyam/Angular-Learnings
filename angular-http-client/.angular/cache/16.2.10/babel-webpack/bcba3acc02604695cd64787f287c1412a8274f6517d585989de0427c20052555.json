{"ast":null,"code":"import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { inject } from \"@angular/core\";\nimport { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.http = inject(HttpClient);\n  }\n  createTask(task) {\n    const headers = new HttpHeaders({\n      'my-header': 'my-header-value'\n    });\n    this.http.post('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', task, {\n      headers: headers\n    }).subscribe({});\n  }\n  deleteTask(key) {\n    this.http.delete('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks/' + key + '.json').subscribe();\n  }\n  deleteAllTasks() {\n    this.http.delete('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json').subscribe();\n  }\n  getAllTasks() {\n    return this.http.get('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json').pipe(map(response => {\n      let tasks = [];\n      for (let key in response) {\n        if (response.hasOwnProperty(key)) {\n          tasks.push({\n            ...response[key],\n            id: key\n          });\n        }\n      }\n      return tasks;\n    }));\n  }\n  updateTask(id, task) {\n    this.http.put('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks/' + id + '.json', task).subscribe();\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpClient","HttpHeaders","inject","map","TaskService","constructor","http","createTask","task","headers","post","subscribe","deleteTask","key","delete","deleteAllTasks","getAllTasks","get","pipe","response","tasks","hasOwnProperty","push","id","updateTask","put","_","_2","factory","ɵfac","providedIn"],"sources":["E:\\sails\\Angular\\angular-http-client\\src\\app\\services\\Task.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { Task } from \"../model/task\";\r\nimport { map } from \"rxjs\";\r\n\r\n@Injectable(\r\n    {\r\n        providedIn: 'root'\r\n    }\r\n)\r\nexport class TaskService {\r\n\r\n    http: HttpClient = inject(HttpClient);\r\n\r\n    createTask(task: Task) {\r\n        const headers = new HttpHeaders({ 'my-header': 'my-header-value' })\r\n        this.http.post<{ name: string }>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json', task, { headers: headers })\r\n            .subscribe({\r\n                \r\n            });\r\n    }\r\n\r\n    deleteTask(key: string | undefined) {\r\n        this.http.delete('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks/' + key + '.json')\r\n            .subscribe();\r\n\r\n    }\r\n\r\n    deleteAllTasks() {\r\n        this.http.delete('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json').subscribe();\r\n    }\r\n\r\n    getAllTasks(){\r\n        return this.http.get<Task[]>('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json')\r\n        .pipe(map((response)=>{\r\n            let tasks = [];\r\n\r\n            for(let key in response){\r\n                if(response.hasOwnProperty(key)){\r\n                    tasks.push({...response[key], id: key})\r\n\r\n                }\r\n            }\r\n            return tasks; \r\n        }))\r\n\r\n    }\r\n\r\n    updateTask(id:string, task: Task){\r\n        this.http.put('https://angular-httpclient-42340-default-rtdb.asia-southeast1.firebasedatabase.app/tasks/' + id + '.json', task)\r\n        .subscribe();\r\n    }\r\n\r\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,MAAM,QAAoB,eAAe;AAElD,SAASC,GAAG,QAAQ,MAAM;;AAO1B,OAAM,MAAOC,WAAW;EALxBC,YAAA;IAOI,KAAAC,IAAI,GAAeJ,MAAM,CAACF,UAAU,CAAC;;EAErCO,UAAUA,CAACC,IAAU;IACjB,MAAMC,OAAO,GAAG,IAAIR,WAAW,CAAC;MAAE,WAAW,EAAE;IAAiB,CAAE,CAAC;IACnE,IAAI,CAACK,IAAI,CAACI,IAAI,CAAmB,+FAA+F,EAAEF,IAAI,EAAE;MAAEC,OAAO,EAAEA;IAAO,CAAE,CAAC,CACxJE,SAAS,CAAC,EAEV,CAAC;EACV;EAEAC,UAAUA,CAACC,GAAuB;IAC9B,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAC,2FAA2F,GAAGD,GAAG,GAAG,OAAO,CAAC,CACxHF,SAAS,EAAE;EAEpB;EAEAI,cAAcA,CAAA;IACV,IAAI,CAACT,IAAI,CAACQ,MAAM,CAAC,+FAA+F,CAAC,CAACH,SAAS,EAAE;EACjI;EAEAK,WAAWA,CAAA;IACP,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAS,+FAA+F,CAAC,CAC5HC,IAAI,CAACf,GAAG,CAAEgB,QAAQ,IAAG;MAClB,IAAIC,KAAK,GAAG,EAAE;MAEd,KAAI,IAAIP,GAAG,IAAIM,QAAQ,EAAC;QACpB,IAAGA,QAAQ,CAACE,cAAc,CAACR,GAAG,CAAC,EAAC;UAC5BO,KAAK,CAACE,IAAI,CAAC;YAAC,GAAGH,QAAQ,CAACN,GAAG,CAAC;YAAEU,EAAE,EAAEV;UAAG,CAAC,CAAC;;;MAI/C,OAAOO,KAAK;IAChB,CAAC,CAAC,CAAC;EAEP;EAEAI,UAAUA,CAACD,EAAS,EAAEf,IAAU;IAC5B,IAAI,CAACF,IAAI,CAACmB,GAAG,CAAC,2FAA2F,GAAGF,EAAE,GAAG,OAAO,EAAEf,IAAI,CAAC,CAC9HG,SAAS,EAAE;EAChB;EAAC,QAAAe,CAAA,G;qBAzCQtB,WAAW;EAAA;EAAA,QAAAuB,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAHJ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}