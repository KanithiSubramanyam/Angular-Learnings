{"ast":null,"code":"var _class;\nimport { inject } from \"@angular/core\";\nimport { AuthenticationService } from \"./auth.service\";\nimport * as i0 from \"@angular/core\";\nexport class AuthGaurdService {\n  constructor() {\n    this.authService = inject(AuthenticationService);\n  }\n  canActivate(route, state) {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    } else {\n      re;\n    }\n  }\n}\n_class = AuthGaurdService;\n_class.ɵfac = function AuthGaurdService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["inject","AuthenticationService","AuthGaurdService","constructor","authService","canActivate","route","state","isAuthenticated","re","factory","ɵfac","providedIn"],"sources":["E:\\sails\\Angular\\start\\src\\app\\Services\\AuthGaurd.service.ts"],"sourcesContent":["import { inject, Injectable } from \"@angular/core\";\r\nimport { CanActivate, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthenticationService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n    providedIn : 'root',\r\n})\r\nexport class AuthGaurdService implements CanActivate{\r\n\r\n    authService : AuthenticationService = inject(AuthenticationService);\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\r\n    boolean | Observable<boolean> | Promise<boolean> {\r\n\r\n        if(this.authService.isAuthenticated()){\r\n            return true;\r\n        } \r\n        else{\r\n            re\r\n        }\r\n    }\r\n}"],"mappings":";AAAA,SAASA,MAAM,QAAoB,eAAe;AAGlD,SAASC,qBAAqB,QAAQ,gBAAgB;;AAKtD,OAAM,MAAOC,gBAAgB;EAH7BC,YAAA;IAKI,KAAAC,WAAW,GAA2BJ,MAAM,CAACC,qBAAqB,CAAC;;EACnEI,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IAGjE,IAAG,IAAI,CAACH,WAAW,CAACI,eAAe,EAAE,EAAC;MAClC,OAAO,IAAI;KACd,MACG;MACAC,EAAE;;EAEV;;SAZSP,gBAAgB;;mBAAhBA,MAAgB;AAAA;;SAAhBA,MAAgB;EAAAQ,OAAA,EAAhBR,MAAgB,CAAAS,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}